{
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Capture", 
        "description": "Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to create similar VMs.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "name": "parameters", 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/VirtualMachineCaptureParameters"
            }, 
            "description": "Parameters supplied to the Capture Virtual Machine operation."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineCaptureResult"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines": {
      "get": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_List", 
        "description": "Lists all of the virtual machines in the specified resource group. Use the nextLink property in the response to get the next page of virtual machines.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineListResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_ConvertToManagedDisks", 
        "description": "Converts virtual machine disks from blob-based to managed disks. Virtual machine must be stop-deallocated before invoking this operation.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Generalize", 
        "description": "Sets the state of the virtual machine to generalized.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_PerformMaintenance", 
        "description": "The operation to perform maintenance on a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Restart", 
        "description": "The operation to restart a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Deallocate", 
        "description": "Shuts down the virtual machine and releases the compute resources. You are not billed for the compute resources that this virtual machine uses.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_PowerOff", 
        "description": "The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the same provisioned resources. You are still charged for this virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usage"
        ], 
        "operationId": "Usage_List", 
        "description": "Gets, for the specified location, the current compute resource usage information as well as the limits for compute resources under the subscription.", 
        "parameters": [
          {
            "name": "location", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The location for which resource usage is queried.", 
            "pattern": "^[-\\w\\._]+$"
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes": {
      "get": {
        "tags": [
          "VirtualMachineSizes"
        ], 
        "operationId": "VirtualMachineSizes_List", 
        "description": "Lists all available virtual machine sizes for a subscription in a location.", 
        "parameters": [
          {
            "name": "location", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The location upon which virtual-machine-sizes is queried.", 
            "pattern": "^[-\\w\\._]+$"
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}": {
      "put": {
        "tags": [
          "VirtualMachineExtensions"
        ], 
        "operationId": "VirtualMachineExtensions_CreateOrUpdate", 
        "description": "The operation to create or update the extension.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine where the extension should be create or updated."
          }, 
          {
            "name": "vmExtensionName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine extension."
          }, 
          {
            "name": "extensionParameters", 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/VirtualMachineExtension"
            }, 
            "description": "Parameters supplied to the Create Virtual Machine Extension operation."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineExtension"
            }
          }, 
          "201": {
            "description": "Created", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineExtension"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }, 
      "delete": {
        "tags": [
          "VirtualMachineExtensions"
        ], 
        "operationId": "VirtualMachineExtensions_Delete", 
        "description": "The operation to delete the extension.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine where the extension should be deleted."
          }, 
          {
            "name": "vmExtensionName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine extension."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }, 
          "204": {
            "description": "No Content"
          }
        }, 
        "x-ms-long-running-operation": true
      }, 
      "get": {
        "tags": [
          "VirtualMachineExtensions"
        ], 
        "operationId": "VirtualMachineExtensions_Get", 
        "description": "The operation to get the extension.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine containing the extension."
          }, 
          {
            "name": "vmExtensionName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine extension."
          }, 
          {
            "name": "$expand", 
            "in": "query", 
            "required": false, 
            "type": "string", 
            "description": "The expand expression to apply on the operation."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineExtension"
            }
          }
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines": {
      "get": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_ListAll", 
        "description": "Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.", 
        "parameters": [
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineListResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/skus": {
      "get": {
        "tags": [
          "Skus", 
          "AvailabilitySets"
        ], 
        "operationId": "ResourceSkus_List", 
        "description": "Gets the list of Microsoft.Compute SKUs available for your Subscription.", 
        "parameters": [
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/ResourceSkusResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}": {
      "put": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_CreateOrUpdate", 
        "description": "The operation to create or update a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "name": "parameters", 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }, 
            "description": "Parameters supplied to the Create Virtual Machine operation."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          }, 
          "201": {
            "description": "Created", 
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }, 
      "delete": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Delete", 
        "description": "The operation to delete a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }, 
          "204": {
            "description": "No Content"
          }
        }, 
        "x-ms-long-running-operation": true
      }, 
      "get": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Get", 
        "description": "Retrieves information about the model view or the instance view of a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "name": "$expand", 
            "in": "query", 
            "required": false, 
            "type": "string", 
            "description": "The expand expression to apply on the operation.", 
            "enum": [
              "instanceView"
            ], 
            "x-ms-enum": {
              "name": "InstanceViewTypes", 
              "modelAsString": false
            }
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          }
        }
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Start", 
        "description": "The operation to start a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy": {
      "post": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_Redeploy", 
        "description": "The operation to redeploy a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/OperationStatusResponse"
            }
          }, 
          "202": {
            "description": "Accepted"
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }, 
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes": {
      "get": {
        "tags": [
          "VirtualMachines"
        ], 
        "operationId": "VirtualMachines_ListAvailableSizes", 
        "description": "Lists all available virtual machine sizes to which the specified virtual machine can be resized.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group."
          }, 
          {
            "name": "vmName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the virtual machine."
          }, 
          {
            "$ref": "./compute.json#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "./compute.json#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          }
        }, 
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  }, 
  "definitions": {
    "Sku": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The sku name."
        }, 
        "tier": {
          "type": "string", 
          "description": "The sku tier."
        }, 
        "capacity": {
          "type": "integer", 
          "format": "int64", 
          "description": "The sku capacity."
        }
      }, 
      "description": "Describes a virtual machine scale set sku."
    }, 
    "VirtualMachineExtension": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/VirtualMachineExtensionProperties"
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ], 
      "description": "Describes a Virtual Machine Extension."
    }, 
    "InstanceViewStatus": {
      "properties": {
        "code": {
          "type": "string", 
          "description": "The status code."
        }, 
        "level": {
          "type": "string", 
          "description": "The level code.", 
          "enum": [
            "Info", 
            "Warning", 
            "Error"
          ], 
          "x-ms-enum": {
            "name": "StatusLevelTypes", 
            "modelAsString": false
          }
        }, 
        "displayStatus": {
          "type": "string", 
          "description": "The short localizable label for the status."
        }, 
        "message": {
          "type": "string", 
          "description": "The detailed status message, including for alerts and error messages."
        }, 
        "time": {
          "type": "string", 
          "format": "date-time", 
          "description": "The time of the status."
        }
      }, 
      "description": "Instance view status."
    }, 
    "StorageProfile": {
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference", 
          "description": "The image reference."
        }, 
        "osDisk": {
          "$ref": "#/definitions/OSDisk", 
          "description": "The OS disk."
        }, 
        "dataDisks": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/DataDisk"
          }, 
          "description": "The data disks."
        }
      }, 
      "description": "Describes a storage profile."
    }, 
    "StorageAccountType": {
      "type": "string", 
      "description": "The Storage Account type.", 
      "enum": [
        "Standard_LRS", 
        "Premium_LRS"
      ], 
      "x-ms-enum": {
        "name": "StorageAccountTypes", 
        "modelAsString": false
      }
    }, 
    "DiskEncryptionSettings": {
      "properties": {
        "diskEncryptionKey": {
          "$ref": "#/definitions/KeyVaultSecretReference", 
          "description": "The disk encryption key which is a Key Vault Secret."
        }, 
        "keyEncryptionKey": {
          "$ref": "#/definitions/KeyVaultKeyReference", 
          "description": "The key encryption key which is Key Vault Key."
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Specifies whether disk encryption should be enabled on the virtual machine."
        }
      }, 
      "description": "Describes a Encryption Settings for a Disk"
    }, 
    "AdditionalUnattendContent": {
      "properties": {
        "passName": {
          "type": "string", 
          "description": "The pass name. Currently, the only allowable value is oobeSystem.", 
          "enum": [
            "oobeSystem"
          ], 
          "x-ms-enum": {
            "name": "PassNames", 
            "modelAsString": false
          }
        }, 
        "componentName": {
          "type": "string", 
          "description": "The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.", 
          "enum": [
            "Microsoft-Windows-Shell-Setup"
          ], 
          "x-ms-enum": {
            "name": "ComponentNames", 
            "modelAsString": false
          }
        }, 
        "settingName": {
          "type": "string", 
          "description": "Setting name (e.g. FirstLogonCommands, AutoLogon )", 
          "enum": [
            "AutoLogon", 
            "FirstLogonCommands"
          ], 
          "x-ms-enum": {
            "name": "SettingNames", 
            "modelAsString": false
          }
        }, 
        "content": {
          "type": "string", 
          "description": "XML formatted content that is added to the unattend.xml file in the specified pass and component. The XML must be less than 4 KB and must include the root element for the setting or feature that is being inserted."
        }
      }, 
      "description": "Additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is a applied."
    }, 
    "ImageReference": {
      "properties": {
        "publisher": {
          "type": "string", 
          "description": "The image publisher."
        }, 
        "offer": {
          "type": "string", 
          "description": "The image offer."
        }, 
        "sku": {
          "type": "string", 
          "description": "The image SKU."
        }, 
        "version": {
          "type": "string", 
          "description": "The image version. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and Build are decimal numbers. Specify 'latest' to use the latest version of the image."
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ], 
      "description": "The image reference."
    }, 
    "DiskInstanceView": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The disk name."
        }, 
        "encryptionSettings": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/DiskEncryptionSettings"
          }, 
          "description": "The encryption settings of the disk."
        }, 
        "statuses": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          }, 
          "description": "The resource status information."
        }
      }, 
      "description": "The instance view of the disk."
    }, 
    "CreateOption": {
      "type": "string", 
      "description": "The create option.", 
      "enum": [
        "fromImage", 
        "empty", 
        "attach"
      ], 
      "x-ms-enum": {
        "name": "DiskCreateOptionTypes", 
        "modelAsString": false
      }
    }, 
    "UsageName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name of the resource."
        }, 
        "localizedValue": {
          "type": "string", 
          "description": "The localized name of the resource."
        }
      }, 
      "description": "The Usage Names."
    }, 
    "NetworkInterfaceReferenceProperties": {
      "properties": {
        "primary": {
          "type": "boolean", 
          "description": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."
        }
      }, 
      "description": "Describes a network interface reference properties."
    }, 
    "Usage": {
      "properties": {
        "unit": {
          "type": "string", 
          "description": "An enum describing the unit of usage measurement.", 
          "enum": [
            "Count"
          ], 
          "x-ms-enum": {
            "name": "UsageUnit", 
            "modelAsString": false
          }
        }, 
        "currentValue": {
          "type": "integer", 
          "format": "int32", 
          "description": "The current usage of the resource."
        }, 
        "limit": {
          "type": "integer", 
          "format": "int64", 
          "description": "The maximum permitted usage of the resource."
        }, 
        "name": {
          "$ref": "#/definitions/UsageName", 
          "description": "The name of the type of usage."
        }
      }, 
      "required": [
        "unit", 
        "currentValue", 
        "limit", 
        "name"
      ], 
      "description": "Describes Compute Resource Usage."
    }, 
    "VaultCertificate": {
      "properties": {
        "certificateUrl": {
          "type": "string", 
          "description": "The URL referencing a secret in a Key Vault which contains a properly formatted certificate."
        }, 
        "certificateStore": {
          "type": "string", 
          "description": "The Certificate store in LocalMachine to add the certificate to on Windows, leave empty on Linux."
        }
      }, 
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
    }, 
    "WinRMListener": {
      "properties": {
        "protocol": {
          "type": "string", 
          "description": "The Protocol used by the WinRM listener. Http and Https are supported.", 
          "enum": [
            "Http", 
            "Https"
          ], 
          "x-ms-enum": {
            "name": "ProtocolTypes", 
            "modelAsString": false
          }
        }, 
        "certificateUrl": {
          "type": "string", 
          "description": "The Certificate URL in KMS for Https listeners. Should be null for Http listeners."
        }
      }, 
      "description": "Describes Protocol and thumbprint of Windows Remote Management listener"
    }, 
    "NetworkInterfaceReference": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/NetworkInterfaceReferenceProperties"
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ], 
      "description": "Describes a network interface reference."
    }, 
    "ResourceSkusResult": {
      "properties": {
        "value": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ResourceSku"
          }, 
          "description": "The list of skus available for the subscription."
        }, 
        "nextLink": {
          "type": "string", 
          "description": "The uri to fetch the next page of Compute Skus. Call ListNext() with this to fetch the next page of VMSS Skus."
        }
      }, 
      "required": [
        "value"
      ], 
      "description": "The Compute List Skus operation response."
    }, 
    "OSProfile": {
      "properties": {
        "computerName": {
          "type": "string", 
          "description": "Specifies the host OS name of the virtual machine."
        }, 
        "adminUsername": {
          "type": "string", 
          "description": "Specifies the name of the administrator account."
        }, 
        "adminPassword": {
          "type": "string", 
          "description": "Specifies the password of the administrator account."
        }, 
        "customData": {
          "type": "string", 
          "description": "Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes"
        }, 
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration", 
          "description": "The Windows configuration of the OS profile."
        }, 
        "linuxConfiguration": {
          "$ref": "#/definitions/LinuxConfiguration", 
          "description": "The Linux configuration of the OS profile."
        }, 
        "secrets": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VaultSecretGroup"
          }, 
          "description": "The list of certificates for addition to the VM."
        }
      }, 
      "description": "Describes an OS profile."
    }, 
    "SubResource": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Resource Id"
        }
      }, 
      "x-ms-azure-resource": true
    }, 
    "VirtualMachineCaptureParameters": {
      "properties": {
        "vhdPrefix": {
          "type": "string", 
          "description": "The captured virtual hard disk's name prefix."
        }, 
        "destinationContainerName": {
          "type": "string", 
          "description": "The destination container name."
        }, 
        "overwriteVhds": {
          "type": "boolean", 
          "description": "Specifies whether to overwrite the destination virtual hard disk, in case of conflict."
        }
      }, 
      "required": [
        "vhdPrefix", 
        "destinationContainerName", 
        "overwriteVhds"
      ], 
      "description": "Capture Virtual Machine parameters."
    }, 
    "InnerError": {
      "properties": {
        "exceptiontype": {
          "type": "string", 
          "description": "The exception type."
        }, 
        "errordetail": {
          "type": "string", 
          "description": "The internal error message or exception dump."
        }
      }, 
      "description": "Inner error details."
    }, 
    "SshConfiguration": {
      "properties": {
        "publicKeys": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          }, 
          "description": "The list of SSH public keys used to authenticate with linux based VMs."
        }
      }, 
      "description": "SSH configuration for Linux based VMs running on Azure"
    }, 
    "ListUsagesResult": {
      "properties": {
        "value": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Usage"
          }, 
          "description": "The list of compute resource usages."
        }, 
        "nextLink": {
          "type": "string", 
          "description": "The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information."
        }
      }, 
      "required": [
        "value"
      ], 
      "description": "The List Usages operation response."
    }, 
    "HardwareProfile": {
      "properties": {
        "vmSize": {
          "type": "string", 
          "description": "The virtual machine size name.", 
          "enum": [
            "Basic_A0", 
            "Basic_A1", 
            "Basic_A2", 
            "Basic_A3", 
            "Basic_A4", 
            "Standard_A0", 
            "Standard_A1", 
            "Standard_A2", 
            "Standard_A3", 
            "Standard_A4", 
            "Standard_A5", 
            "Standard_A6", 
            "Standard_A7", 
            "Standard_A8", 
            "Standard_A9", 
            "Standard_A10", 
            "Standard_A11", 
            "Standard_A1_v2", 
            "Standard_A2_v2", 
            "Standard_A4_v2", 
            "Standard_A8_v2", 
            "Standard_A2m_v2", 
            "Standard_A4m_v2", 
            "Standard_A8m_v2", 
            "Standard_D1", 
            "Standard_D2", 
            "Standard_D3", 
            "Standard_D4", 
            "Standard_D11", 
            "Standard_D12", 
            "Standard_D13", 
            "Standard_D14", 
            "Standard_D1_v2", 
            "Standard_D2_v2", 
            "Standard_D3_v2", 
            "Standard_D4_v2", 
            "Standard_D5_v2", 
            "Standard_D11_v2", 
            "Standard_D12_v2", 
            "Standard_D13_v2", 
            "Standard_D14_v2", 
            "Standard_D15_v2", 
            "Standard_DS1", 
            "Standard_DS2", 
            "Standard_DS3", 
            "Standard_DS4", 
            "Standard_DS11", 
            "Standard_DS12", 
            "Standard_DS13", 
            "Standard_DS14", 
            "Standard_DS1_v2", 
            "Standard_DS2_v2", 
            "Standard_DS3_v2", 
            "Standard_DS4_v2", 
            "Standard_DS5_v2", 
            "Standard_DS11_v2", 
            "Standard_DS12_v2", 
            "Standard_DS13_v2", 
            "Standard_DS14_v2", 
            "Standard_DS15_v2", 
            "Standard_F1", 
            "Standard_F2", 
            "Standard_F4", 
            "Standard_F8", 
            "Standard_F16", 
            "Standard_F1s", 
            "Standard_F2s", 
            "Standard_F4s", 
            "Standard_F8s", 
            "Standard_F16s", 
            "Standard_G1", 
            "Standard_G2", 
            "Standard_G3", 
            "Standard_G4", 
            "Standard_G5", 
            "Standard_GS1", 
            "Standard_GS2", 
            "Standard_GS3", 
            "Standard_GS4", 
            "Standard_GS5", 
            "Standard_H8", 
            "Standard_H16", 
            "Standard_H8m", 
            "Standard_H16m", 
            "Standard_H16r", 
            "Standard_H16mr", 
            "Standard_L4s", 
            "Standard_L8s", 
            "Standard_L16s", 
            "Standard_L32s", 
            "Standard_NC6", 
            "Standard_NC12", 
            "Standard_NC24", 
            "Standard_NC24r", 
            "Standard_NV6", 
            "Standard_NV12", 
            "Standard_NV24"
          ], 
          "x-ms-enum": {
            "name": "VirtualMachineSizeTypes", 
            "modelAsString": true
          }
        }
      }, 
      "description": "Describes a hardware profile."
    }, 
    "KeyVaultSecretReference": {
      "properties": {
        "secretUrl": {
          "type": "string", 
          "description": "The URL referencing a secret in a Key Vault."
        }, 
        "sourceVault": {
          "$ref": "#/definitions/SubResource", 
          "description": "The relative URL of the Key Vault containing the secret."
        }
      }, 
      "required": [
        "secretUrl", 
        "sourceVault"
      ], 
      "description": "Describes a reference to Key Vault Secret"
    }, 
    "VirtualMachineAgentInstanceView": {
      "properties": {
        "vmAgentVersion": {
          "type": "string", 
          "description": "The VM Agent full version."
        }, 
        "extensionHandlers": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VirtualMachineExtensionHandlerInstanceView"
          }, 
          "description": "The virtual machine extension handler instance view."
        }, 
        "statuses": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          }, 
          "description": "The resource status information."
        }
      }, 
      "description": "The instance view of the VM Agent running on the virtual machine."
    }, 
    "ResourceSkuCosts": {
      "properties": {
        "meterID": {
          "type": "string", 
          "readOnly": true, 
          "description": "Used for querying price from commerce."
        }, 
        "quantity": {
          "type": "integer", 
          "readOnly": true, 
          "format": "int64", 
          "description": "The multiplier is needed to extend the base metered cost."
        }, 
        "extendedUnit": {
          "type": "string", 
          "readOnly": true, 
          "description": "An invariant to show the extended unit."
        }
      }, 
      "description": "Describes metadata for retrieving price info."
    }, 
    "VirtualMachineExtensionProperties": {
      "properties": {
        "forceUpdateTag": {
          "type": "string", 
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        }, 
        "publisher": {
          "type": "string", 
          "description": "The name of the extension handler publisher."
        }, 
        "type": {
          "type": "string", 
          "description": "The type of the extension handler."
        }, 
        "typeHandlerVersion": {
          "type": "string", 
          "description": "The type version of the extension handler."
        }, 
        "autoUpgradeMinorVersion": {
          "type": "boolean", 
          "description": "Whether the extension handler should be automatically upgraded across minor versions."
        }, 
        "settings": {
          "type": "object", 
          "description": "Json formatted public settings for the extension."
        }, 
        "protectedSettings": {
          "type": "object", 
          "description": "Json formatted protected settings for the extension."
        }, 
        "provisioningState": {
          "readOnly": true, 
          "type": "string", 
          "description": "The provisioning state, which only appears in the response."
        }, 
        "instanceView": {
          "$ref": "#/definitions/VirtualMachineExtensionInstanceView", 
          "description": "The virtual machine extension instance view."
        }
      }, 
      "description": "Describes the properties of a Virtual Machine Extension."
    }, 
    "VirtualHardDisk": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
        }
      }, 
      "description": "Describes the uri of a disk."
    }, 
    "VirtualMachineExtensionInstanceView": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The virtual machine extension name."
        }, 
        "type": {
          "type": "string", 
          "description": "The full type of the extension handler which includes both publisher and type."
        }, 
        "typeHandlerVersion": {
          "type": "string", 
          "description": "The type version of the extension handler."
        }, 
        "substatuses": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          }, 
          "description": "The resource status information."
        }, 
        "statuses": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          }, 
          "description": "The resource status information."
        }
      }, 
      "description": "The instance view of a virtual machine extension."
    }, 
    "VirtualMachineCaptureResultProperties": {
      "properties": {
        "output": {
          "type": "object", 
          "description": "Operation output data (raw JSON)"
        }
      }, 
      "description": "Compute-specific operation properties, including output"
    }, 
    "SshPublicKey": {
      "properties": {
        "path": {
          "type": "string", 
          "description": "Specifies the full path on the created VM where SSH public key is stored. If the file already exists, the specified key is appended to the file."
        }, 
        "keyData": {
          "type": "string", 
          "description": "Certificate public key used to authenticate to the VM through SSH. The certificate must be in Pem format with or without headers."
        }
      }, 
      "description": "Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed."
    }, 
    "VirtualMachineIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true, 
          "type": "string", 
          "description": "The principal id of virtual machine identity."
        }, 
        "tenantId": {
          "readOnly": true, 
          "type": "string", 
          "description": "The tenant id associated with the virtual machine."
        }, 
        "type": {
          "type": "string", 
          "description": "The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.", 
          "enum": [
            "SystemAssigned"
          ], 
          "x-ms-enum": {
            "name": "ResourceIdentityType", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Identity for the virtual machine."
    }, 
    "ApiErrorBase": {
      "properties": {
        "code": {
          "type": "string", 
          "description": "The error code."
        }, 
        "target": {
          "type": "string", 
          "description": "The target of the particular error."
        }, 
        "message": {
          "type": "string", 
          "description": "The error message."
        }
      }, 
      "description": "Api error base."
    }, 
    "VirtualMachineExtensionHandlerInstanceView": {
      "properties": {
        "type": {
          "type": "string", 
          "description": "Full type of the extension handler which includes both publisher and type."
        }, 
        "typeHandlerVersion": {
          "type": "string", 
          "description": "The type version of the extension handler."
        }, 
        "status": {
          "$ref": "#/definitions/InstanceViewStatus", 
          "description": "The extension handler status."
        }
      }, 
      "description": "The instance view of a virtual machine extension handler."
    }, 
    "KeyVaultKeyReference": {
      "properties": {
        "keyUrl": {
          "type": "string", 
          "description": "The URL referencing a key in a Key Vault."
        }, 
        "sourceVault": {
          "$ref": "#/definitions/SubResource", 
          "description": "The relative URL of the Key Vault containing the key."
        }
      }, 
      "required": [
        "keyUrl", 
        "sourceVault"
      ], 
      "description": "Describes a reference to Key Vault Key"
    }, 
    "Resource": {
      "description": "The Resource model definition.", 
      "properties": {
        "id": {
          "readOnly": true, 
          "type": "string", 
          "description": "Resource Id"
        }, 
        "name": {
          "readOnly": true, 
          "type": "string", 
          "description": "Resource name"
        }, 
        "type": {
          "readOnly": true, 
          "type": "string", 
          "description": "Resource type"
        }, 
        "location": {
          "type": "string", 
          "description": "Resource location"
        }, 
        "tags": {
          "type": "object", 
          "additionalProperties": {
            "type": "string"
          }, 
          "description": "Resource tags"
        }
      }, 
      "required": [
        "location"
      ], 
      "x-ms-azure-resource": true
    }, 
    "LinuxConfiguration": {
      "properties": {
        "disablePasswordAuthentication": {
          "type": "boolean", 
          "description": "Specifies whether password authentication should be disabled."
        }, 
        "ssh": {
          "$ref": "#/definitions/SshConfiguration", 
          "description": "The SSH configuration for linux VMs."
        }
      }, 
      "description": "Describes Windows configuration of the OS Profile."
    }, 
    "VirtualMachine": {
      "properties": {
        "plan": {
          "$ref": "#/definitions/Plan", 
          "description": "The purchase plan when deploying virtual machine from VM Marketplace images."
        }, 
        "properties": {
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/VirtualMachineProperties"
        }, 
        "resources": {
          "readOnly": true, 
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VirtualMachineExtension"
          }, 
          "description": "The virtual machine child extension resources."
        }, 
        "identity": {
          "$ref": "#/definitions/VirtualMachineIdentity", 
          "description": "The identity of the virtual machine, if configured."
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ], 
      "description": "Describes a Virtual Machine."
    }, 
    "VirtualMachineProperties": {
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile", 
          "description": "The hardware profile."
        }, 
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile", 
          "description": "The storage profile."
        }, 
        "osProfile": {
          "$ref": "#/definitions/OSProfile", 
          "description": "The OS profile."
        }, 
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile", 
          "description": "The network profile."
        }, 
        "diagnosticsProfile": {
          "$ref": "#/definitions/DiagnosticsProfile", 
          "description": "The diagnostics profile."
        }, 
        "availabilitySet": {
          "$ref": "#/definitions/SubResource", 
          "description": "The reference Id of the availability set to which the virtual machine belongs."
        }, 
        "provisioningState": {
          "readOnly": true, 
          "type": "string", 
          "description": "The provisioning state, which only appears in the response."
        }, 
        "instanceView": {
          "$ref": "#/definitions/VirtualMachineInstanceView", 
          "readOnly": true, 
          "description": "The virtual machine instance view."
        }, 
        "licenseType": {
          "type": "string", 
          "description": "Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system."
        }, 
        "vmId": {
          "readOnly": true, 
          "type": "string", 
          "description": "Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands."
        }
      }, 
      "description": "Describes the properties of a Virtual Machine."
    }, 
    "VaultSecretGroup": {
      "properties": {
        "sourceVault": {
          "$ref": "#/definitions/SubResource", 
          "description": "The Relative URL of the Key Vault containing all of the certificates in VaultCertificates."
        }, 
        "vaultCertificates": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VaultCertificate"
          }, 
          "description": "The list of key vault references in SourceVault which contain certificates."
        }
      }, 
      "description": "Describes a set of certificates which are all in the same Key Vault."
    }, 
    "ApiError": {
      "properties": {
        "details": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ApiErrorBase"
          }, 
          "description": "The Api error details"
        }, 
        "innererror": {
          "$ref": "#/definitions/InnerError", 
          "description": "The Api inner error"
        }, 
        "code": {
          "type": "string", 
          "description": "The error code."
        }, 
        "target": {
          "type": "string", 
          "description": "The target of the particular error."
        }, 
        "message": {
          "type": "string", 
          "description": "The error message."
        }
      }, 
      "description": "Api error."
    }, 
    "WindowsConfiguration": {
      "properties": {
        "provisionVMAgent": {
          "type": "boolean", 
          "description": "Indicates whether the virtual machine agent should be provisioned on the Virtual Machine. If not specified, then the default behavior is to set it to true."
        }, 
        "enableAutomaticUpdates": {
          "type": "boolean", 
          "description": "Indicates whether Windows updates are automatically installed on the VM."
        }, 
        "timeZone": {
          "type": "string", 
          "description": "The time zone of the VM"
        }, 
        "additionalUnattendContent": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/AdditionalUnattendContent"
          }, 
          "description": "Additional base-64 encoded XML formatted information that can be included in the Unattend.xml file."
        }, 
        "winRM": {
          "$ref": "#/definitions/WinRMConfiguration", 
          "description": "The Windows Remote Management configuration of the VM"
        }
      }, 
      "description": "Describes Windows Configuration of the OS Profile."
    }, 
    "VirtualMachineSizeListResult": {
      "properties": {
        "value": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          }, 
          "description": "The list of virtual machine sizes."
        }
      }, 
      "description": "The List Virtual Machine operation response."
    }, 
    "VirtualMachineSize": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The name of the virtual machine size."
        }, 
        "numberOfCores": {
          "type": "integer", 
          "format": "int32", 
          "description": "The number of cores supported by the virtual machine size."
        }, 
        "osDiskSizeInMB": {
          "type": "integer", 
          "format": "int32", 
          "description": "The OS disk size, in MB, allowed by the virtual machine size."
        }, 
        "resourceDiskSizeInMB": {
          "type": "integer", 
          "format": "int32", 
          "description": "The resource disk size, in MB, allowed by the virtual machine size."
        }, 
        "memoryInMB": {
          "type": "integer", 
          "format": "int32", 
          "description": "The amount of memory, in MB, supported by the virtual machine size."
        }, 
        "maxDataDiskCount": {
          "type": "integer", 
          "format": "int32", 
          "description": "The maximum number of data disks that can be attached to the virtual machine size."
        }
      }, 
      "description": "Describes the properties of a VM size."
    }, 
    "WinRMConfiguration": {
      "properties": {
        "listeners": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/WinRMListener"
          }, 
          "description": "The list of Windows Remote Management listeners"
        }
      }, 
      "description": "Describes Windows Remote Management configuration of the VM"
    }, 
    "ResourceSku": {
      "properties": {
        "resourceType": {
          "readOnly": true, 
          "type": "string", 
          "description": "The type of resource the SKU applies to."
        }, 
        "name": {
          "readOnly": true, 
          "type": "string", 
          "description": "The name of SKU."
        }, 
        "tier": {
          "readOnly": true, 
          "type": "string", 
          "description": "The tier of this particular SKU."
        }, 
        "size": {
          "readOnly": true, 
          "type": "string", 
          "description": "The Size of the SKU."
        }, 
        "family": {
          "readOnly": true, 
          "type": "string", 
          "description": "The Family of this particular SKU."
        }, 
        "kind": {
          "readOnly": true, 
          "type": "string", 
          "description": "The Kind of resources that are supported in this SKU."
        }, 
        "capacity": {
          "$ref": "#/definitions/ResourceSkuCapacity", 
          "readOnly": true, 
          "description": "Available scaling information."
        }, 
        "locations": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "type": "string"
          }, 
          "description": "The set of locations that the SKU is available."
        }, 
        "apiVersions": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "type": "string"
          }, 
          "description": "The api versions that support this SKU."
        }, 
        "costs": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "$ref": "#/definitions/ResourceSkuCosts"
          }, 
          "description": "Metadata for retrieving price info."
        }, 
        "capabilities": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "$ref": "#/definitions/ResourceSkuCapabilities"
          }, 
          "description": "A name value pair to describe the capability."
        }, 
        "restrictions": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "$ref": "#/definitions/ResourceSkuRestrictions"
          }, 
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      }, 
      "description": "Describes an available Compute SKU."
    }, 
    "Caching": {
      "type": "string", 
      "description": "The caching type.", 
      "enum": [
        "None", 
        "ReadOnly", 
        "ReadWrite"
      ], 
      "x-ms-enum": {
        "name": "CachingTypes", 
        "modelAsString": false
      }
    }, 
    "ManagedDiskParameters": {
      "properties": {
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType", 
          "description": "The Storage Account type."
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ], 
      "description": "The parameters of a managed disk."
    }, 
    "VirtualMachineListResult": {
      "properties": {
        "value": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }, 
          "description": "The list of virtual machines."
        }, 
        "nextLink": {
          "type": "string", 
          "description": "The URI to fetch the next page of VMs. Call ListNext() with this URI to fetch the next page of Virtual Machines."
        }
      }, 
      "required": [
        "value"
      ], 
      "description": "The List Virtual Machine operation response."
    }, 
    "VirtualMachineCaptureResult": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/VirtualMachineCaptureResultProperties"
        }
      }, 
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ], 
      "description": "Resource Id."
    }, 
    "OperationStatusResponse": {
      "properties": {
        "name": {
          "readOnly": true, 
          "type": "string", 
          "description": "Operation ID"
        }, 
        "status": {
          "readOnly": true, 
          "type": "string", 
          "description": "Operation status"
        }, 
        "startTime": {
          "readOnly": true, 
          "type": "string", 
          "format": "date-time", 
          "description": "Start time of the operation"
        }, 
        "endTime": {
          "readOnly": true, 
          "type": "string", 
          "format": "date-time", 
          "description": "End time of the operation"
        }, 
        "error": {
          "readOnly": true, 
          "$ref": "#/definitions/ApiError", 
          "description": "Api error"
        }
      }, 
      "description": "Operation status response"
    }, 
    "Plan": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The plan ID."
        }, 
        "publisher": {
          "type": "string", 
          "description": "The publisher ID."
        }, 
        "product": {
          "type": "string", 
          "description": "The offer ID."
        }, 
        "promotionCode": {
          "type": "string", 
          "description": "The promotion code."
        }
      }, 
      "description": "Plan for the resource."
    }, 
    "NetworkProfile": {
      "properties": {
        "networkInterfaces": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/NetworkInterfaceReference"
          }, 
          "description": "Specifies the list of resource IDs for the network interfaces associated with the virtual machine."
        }
      }, 
      "description": "Describes a network profile."
    }, 
    "VirtualMachineInstanceView": {
      "properties": {
        "platformUpdateDomain": {
          "type": "integer", 
          "format": "int32", 
          "description": "Specifies the update domain of the virtual machine."
        }, 
        "platformFaultDomain": {
          "type": "integer", 
          "format": "int32", 
          "description": "Specifies the fault domain of the virtual machine."
        }, 
        "rdpThumbPrint": {
          "type": "string", 
          "description": "The Remote desktop certificate thumbprint."
        }, 
        "vmAgent": {
          "$ref": "#/definitions/VirtualMachineAgentInstanceView", 
          "description": "The VM Agent running on the virtual machine."
        }, 
        "maintenanceRedeployStatus": {
          "$ref": "#/definitions/MaintenanceRedeployStatus", 
          "description": "The Maintenance Operation status on the virtual machine."
        }, 
        "disks": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/DiskInstanceView"
          }, 
          "description": "The virtual machine disk information."
        }, 
        "extensions": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/VirtualMachineExtensionInstanceView"
          }, 
          "description": "The extensions information."
        }, 
        "bootDiagnostics": {
          "$ref": "#/definitions/BootDiagnosticsInstanceView", 
          "description": "The boot diagnostics."
        }, 
        "statuses": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          }, 
          "description": "The resource status information."
        }
      }, 
      "description": "The instance view of a virtual machine."
    }, 
    "OSDisk": {
      "properties": {
        "osType": {
          "type": "string", 
          "description": "The Operating System type.", 
          "enum": [
            "Windows", 
            "Linux"
          ], 
          "x-ms-enum": {
            "name": "OperatingSystemTypes", 
            "modelAsString": false
          }
        }, 
        "encryptionSettings": {
          "$ref": "#/definitions/DiskEncryptionSettings", 
          "description": "The disk encryption settings."
        }, 
        "name": {
          "type": "string", 
          "description": "The disk name."
        }, 
        "vhd": {
          "$ref": "#/definitions/VirtualHardDisk", 
          "description": "The virtual hard disk."
        }, 
        "image": {
          "$ref": "#/definitions/VirtualHardDisk", 
          "description": "The source user image virtual hard disk. The virtual hard disk will be copied before using it to attach to the virtual machine. If SourceImage is provided, the destination virtual hard disk must not exist."
        }, 
        "caching": {
          "$ref": "#/definitions/Caching", 
          "description": "The caching type."
        }, 
        "createOption": {
          "$ref": "#/definitions/CreateOption", 
          "description": "The create option."
        }, 
        "diskSizeGB": {
          "type": "integer", 
          "format": "int32", 
          "description": "The initial disk size, in GB, for blank data disks, and the new desired size for resizing existing OS and data disks."
        }, 
        "managedDisk": {
          "description": "The managed disk parameters.", 
          "$ref": "#/definitions/ManagedDiskParameters"
        }
      }, 
      "required": [
        "createOption"
      ], 
      "description": "Describes an Operating System disk."
    }, 
    "ResourceSkuCapabilities": {
      "properties": {
        "name": {
          "type": "string", 
          "readOnly": true, 
          "description": "An invariant to describe the feature."
        }, 
        "value": {
          "type": "string", 
          "readOnly": true, 
          "description": "An invariant if the feature is measured by quantity."
        }
      }, 
      "description": "Describes The SKU capabilites object."
    }, 
    "ResourceSkuRestrictions": {
      "properties": {
        "type": {
          "type": "string", 
          "readOnly": true, 
          "description": "The type of restrictions.", 
          "enum": [
            "location"
          ], 
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsType", 
            "modelAsString": false
          }
        }, 
        "values": {
          "type": "array", 
          "readOnly": true, 
          "items": {
            "type": "string"
          }, 
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
        }, 
        "reasonCode": {
          "type": "string", 
          "readOnly": true, 
          "description": "The reason for restriction.", 
          "enum": [
            "QuotaId", 
            "NotAvailableForSubscription"
          ], 
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsReasonCode", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Describes scaling information of a SKU."
    }, 
    "MaintenanceRedeployStatus": {
      "properties": {
        "isCustomerInitiatedMaintenanceAllowed": {
          "type": "boolean", 
          "description": "True, if customer is allowed to perform Maintenance."
        }, 
        "preMaintenanceWindowStartTime": {
          "type": "string", 
          "format": "date-time", 
          "description": "Start Time for the Pre Maintenance Window."
        }, 
        "preMaintenanceWindowEndTime": {
          "type": "string", 
          "format": "date-time", 
          "description": "End Time for the Pre Maintenance Window."
        }, 
        "maintenanceWindowStartTime": {
          "type": "string", 
          "format": "date-time", 
          "description": "Start Time for the Maintenance Window."
        }, 
        "maintenanceWindowEndTime": {
          "type": "string", 
          "format": "date-time", 
          "description": "End Time for the Maintenance Window."
        }, 
        "lastOperationResultCode": {
          "type": "string", 
          "description": "The Last Maintenance Operation Result Code.", 
          "enum": [
            "None", 
            "RetryLater", 
            "MaintenanceAborted", 
            "MaintenanceCompleted"
          ], 
          "x-ms-enum": {
            "name": "MaintenanceOperationResultCodeTypes", 
            "modelAsString": false
          }
        }, 
        "lastOperationMessage": {
          "type": "string", 
          "description": "Message returned for the last Maintenance Operation."
        }
      }, 
      "description": "Maintenance Operation Status."
    }, 
    "DiagnosticsProfile": {
      "properties": {
        "bootDiagnostics": {
          "$ref": "#/definitions/BootDiagnostics", 
          "description": "Boot Diagnostics is a debugging feature which allows the user to view console output and/or a screenshot of the virtual machine from the hypervisor."
        }
      }, 
      "description": "Describes a diagnostics profile."
    }, 
    "ResourceSkuCapacity": {
      "properties": {
        "minimum": {
          "type": "integer", 
          "readOnly": true, 
          "format": "int64", 
          "description": "The minimum capacity."
        }, 
        "maximum": {
          "type": "integer", 
          "readOnly": true, 
          "format": "int64", 
          "description": "The maximum capacity that can be set."
        }, 
        "default": {
          "type": "integer", 
          "readOnly": true, 
          "format": "int64", 
          "description": "The default capacity."
        }, 
        "scaleType": {
          "type": "string", 
          "readOnly": true, 
          "description": "The scale type applicable to the sku.", 
          "enum": [
            "Automatic", 
            "Manual", 
            "None"
          ], 
          "x-ms-enum": {
            "name": "ResourceSkuCapacityScaleType", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Describes scaling information of a SKU."
    }, 
    "BootDiagnostics": {
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Whether boot diagnostics should be enabled on the Virtual Machine."
        }, 
        "storageUri": {
          "type": "string", 
          "description": "URI of the storage account to use for placing the console output and screenshot."
        }
      }, 
      "description": "Describes Boot Diagnostics."
    }, 
    "BootDiagnosticsInstanceView": {
      "properties": {
        "consoleScreenshotBlobUri": {
          "type": "string", 
          "description": "The console screenshot blob URI."
        }, 
        "serialConsoleLogBlobUri": {
          "type": "string", 
          "description": "The Linux serial console log blob Uri."
        }
      }, 
      "description": "The instance view of a virtual machine boot diagnostics."
    }, 
    "DataDisk": {
      "properties": {
        "lun": {
          "type": "integer", 
          "format": "int32", 
          "description": "The logical unit number."
        }, 
        "name": {
          "type": "string", 
          "description": "The disk name."
        }, 
        "vhd": {
          "$ref": "#/definitions/VirtualHardDisk", 
          "description": "The virtual hard disk."
        }, 
        "image": {
          "$ref": "#/definitions/VirtualHardDisk", 
          "description": "The source user image virtual hard disk. This virtual hard disk will be copied before using it to attach to the virtual machine. If SourceImage is provided, the destination virtual hard disk must not exist."
        }, 
        "caching": {
          "$ref": "#/definitions/Caching", 
          "description": "The caching type."
        }, 
        "createOption": {
          "$ref": "#/definitions/CreateOption", 
          "description": "The create option."
        }, 
        "diskSizeGB": {
          "type": "integer", 
          "format": "int32", 
          "description": "The initial disk size in GB for blank data disks, and the new desired size for resizing existing OS and data disks."
        }, 
        "managedDisk": {
          "description": "The managed disk parameters.", 
          "$ref": "#/definitions/ManagedDiskParameters"
        }
      }, 
      "required": [
        "lun", 
        "createOption"
      ], 
      "description": "Describes a data disk."
    }
  }
}
